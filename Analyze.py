from Game.LocalGame import FullGame
import matplotlib.pyplot as plt
import numpy as np

def GameLogCollect(game):
    '''
    WIP: houjuu, tsumo counts
    player_log:
        score: scores of every round, start at 25000
        shaintin: shantin after every discard action
        ron: detial of ron consists of: score, han

    game_log: (each item is a list of 4 elements)
        rank: ranks after every game ended
    '''
    res = {}
    res['score'] = [game.players[i].player_log['score'] for i in range(4)]
    res['shantin'] = [game.players[i].player_log['shantin'] for i in range(4)]
    res['ron'] = [game.players[i].player_log['ron'] for i in range(4)]
    res['rank'] = game.game_log['rank']
    return res

def AnalyzeResult(data):
    # only show the score chart of the first game
    player_names = ['cnn0', 'cnn1', 'cnn2', 'greedy']

    fig, ax = plt.subplots()

    y = np.array(data[1]['score'])
    ax.set(xlabel='round', ylabel='score')
    ax.set_yticks(np.arange(0, 40001, 5000))
    ax.set_ylim(10000, 40000)
    ax.set_xticks(np.arange(0, len(data[1]['score'][0]), 1))
    ax.tick_params(axis="both", direction="in")
    
    ax.plot(data[0]['score'][0], 'c', label=player_names[0])
    ax.plot(data[0]['score'][1], 'm', label=player_names[1])
    ax.plot(data[0]['score'][2], 'y', label=player_names[2])
    ax.plot(data[0]['score'][3], 'k', label=player_names[3])
    ax.legend()
    plt.show()

def test_data():
    data = {}
    data[0] = {'score': [[25000, 25000, 25000, 25000, 25000, 25000, 25000, 25000, 25000], [25000, 25000, 25000, 25000, 25000, 25000, 25000, 25000, 25000], [25000, 25000, 25000, 25000, 25000, 25000, 25000, 25000, 25000], [25000, 25000, 25000, 25000, 25000, 25000, 25000, 25000, 25000]], 'shantin': [[[2, 3, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 3, 2, 3, 3, 3, 3, 2], [4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2], [5, 5, 4, 3, 2, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [5, 4, 4, 2, 2, 3, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2], [4, 3, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [4, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1], [4, 3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2], [3, 2, 2, 2, 2, 1, 1, 1, 2, 2, 1, 2, 2, 1, 1, 2, 2, 1, 1]], [[3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1], [3, 3, 3, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 1, 2, 2, 2, 3, 3], [4, 3, 2, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0], [3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1], [4, 4, 4, 4, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1], [1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 0, 0, 0, 1], [5, 5, 4, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1], [2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 2, 2]], [[4, 4, 4, 4, 4, 3, 2, 3, 3, 2, 2, 1, 1, 1, 1, 2, 2, 2], [3, 3, 3, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2], [4, 4, 3, 3, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 2, 2], [4, 4, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2], [4, 3, 3, 3, 2, 2, 3, 3, 3, 2, 2, 1, 1, 3, 3, 3, 1, 1, 2], [6, 5, 4, 3, 3, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 0, 0], [4, 4, 4, 4, 4, 4, 4, 3, 2, 3, 3, 3, 3, 2, 2, 3, 2, 2, 3], [3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1]], [[3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0], [5, 5, 4, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [4, 3, 3, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [3, 3, 2, 2, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [4, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [4, 4, 3, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1], [4, 4, 4, 3, 3, 3, 2, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [4, 3, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]]], 'ron': [[], [], [], []], 'rank': [1, 2, 3, 4]}
    data[1] = {'score': [[25000, 25000, 24980, 24970, 24970, 24970, 24970, 24970, 24970, 24970], [25000, 25000, 24997, 24987, 23287, 23287, 23287, 23287, 23287, 23287], [25000, 25000, 27700, 29800, 29800, 29800, 29400, 29400, 29400, 29400], [25000, 25000, 24980, 24970, 26670, 26670, 27070, 27070, 27070, 27070]], 'shantin': [[[4, 4, 4, 4, 4, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [5, 4, 3, 3, 3, 2, 1], [2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 3, 2, 1, 1, 1], [4, 4, 4, 4, 4, 4, 4, 4], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2], [2, 2, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1], [4, 3, 3, 3, 3, 3, 3, 4, 3, 3, 3, 2, 2, 1, 1, 1, 2, 2, 2, 2], [3, 3, 3, 3, 3, 2, 2, 1, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2], [3, 3, 3, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], [[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 3], [4, 3, 3, 3, 2, 2, 2, 2], [2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 3, 3, 3, 3], [4, 4, 4, 3, 3, 3, 3, 3], [4, 3, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1], [3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 2], [3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1], [4, 4, 4, 4, 4, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1], [3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], [[3, 3, 3, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], [3, 3, 2, 2, 2, 1, 1], [3, 2, 3, 2, 3, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0], [3, 3, 3, 3, 3, 2, 2, 2], [2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2], [5, 5, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3], [4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 0, 0, 0], [3, 3, 2, 2, 2, 1, 1, 0, 1, 1, 1, 0, 0, 1, 2, 2, 2, 2, 3, 2], [2, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 1, 1]], [[3, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [3, 3, 3, 2, 2, 2, 2], [3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1], [2, 1, 1, 1, 1, 0, 0, 0], [3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0], [4, 3, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [4, 4, 3, 3, 3, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]], 'ron': [[], [], [], [{'score': 1700, 'score_desc': '20Fu/1Han --> 20符1飜700点 1700点', 'han': {'立直(1Han)': 1}, 'han_desc': '立直(1Han)', 'fu': {'幺九暗刻(8Fu)': 8, '辺張嵌張和牌(2Fu)': 2, '門前清荣和(10Fu)': 10}, 'fu_desc': '幺九暗刻(8Fu) 辺張嵌張和牌(2Fu) 門前清荣和(10Fu)', 'partition': [[0, 1, 2], [9, 9], [14, 15, 16], [20, 21, 22], [29, 29, 29]], 'zimo_lose': {'is_zimo': False}}, {'score': 400, 'score_desc': '10Fu/1Han --> 10符1飜400点 400点', 'han': {'一気通貫(1Han)': 1}, 'han_desc': '一気 通貫(1Han)', 'fu': {'辺張嵌張和牌(2Fu)': 2}, 'fu_desc': '辺張嵌張和牌(2Fu)', 'partition': [[0, 1, 2], [3, 4, 5], [10, 11, 12], [23, 23]], 'zimo_lose': {'is_zimo': False}}]], 'rank': [3, 4, 1, 2]}
    return data

game_count = 2

if __name__ =='__main__':
    results = {}
    for i in range(game_count):
        game = FullGame(4)
        game.game_start()
        results[i] = GameLogCollect(game)
    # results = test_data()
    AnalyzeResult(results) 


